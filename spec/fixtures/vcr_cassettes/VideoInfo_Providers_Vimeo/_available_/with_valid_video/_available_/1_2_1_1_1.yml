---
http_interactions:
- request:
    method: head
    uri: https://vimeo.com/98605382
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - VideoInfo/3.1.0
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Feb 2023 20:29:00 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Connection:
      - keep-alive
      Expires:
      - Wed, 15 Feb 2023 20:36:20 GMT
      X-Vimeo-Device:
      - d
      X-Ua-Compatible:
      - IE=edge
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - sameorigin
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Security-Policy-Report-Only:
      - 'default-src https: data: blob: wss: ''unsafe-inline'' ''unsafe-eval''; report-uri
        /_csp'
      X-Bapp-Server:
      - pweb-f594768b7-2kmgj
      Via:
      - 1.1 varnish, 1.1 varnish, 1.1 varnish
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      X-Varnish-Cache:
      - '1'
      X-Vserver:
      - webproxy-rollout-prod-varnish-6
      X-Backend-Proxy:
      - webproxy7
      Age:
      - '0'
      X-Served-By:
      - cache-iad-kcgs7200082-IAD, cache-mrs10549-MRS
      X-Cache:
      - MISS, MISS
      X-Cache-Hits:
      - 0, 0
      X-Timer:
      - S1676492941.665830,VS0,VE139
      Vary:
      - User-Agent,Accept-Encoding
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=988_v6U9gEbOZXcNHRJlM0.tLYRFfOf.up1NtjITEQI-1676492940-0-AZw/Jy4yGCze+kRKhuxp9YuqCDEFNtgA7UQs5MfMYVisgyno4CwV3a+SFTOcpRj8PuDCUIIVyN9bB+7nmOLgKLY=;
        path=/; expires=Wed, 15-Feb-23 20:59:00 GMT; domain=.vimeo.com; HttpOnly;
        Secure; SameSite=None
      Server:
      - cloudflare
      Cf-Ray:
      - 79a0cb0f0f14194c-BCN
    body:
      encoding: UTF-8
      string: ''
    http_version:
  recorded_at: Wed, 15 Feb 2023 20:29:00 GMT
- request:
    method: get
    uri: https://vimeo.com/98605382
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 15 Feb 2023 20:29:01 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Expires:
      - Wed, 15 Feb 2023 20:36:21 GMT
      X-Vimeo-Device:
      - d
      X-Ua-Compatible:
      - IE=edge
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - sameorigin
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Security-Policy-Report-Only:
      - 'default-src https: data: blob: wss: ''unsafe-inline'' ''unsafe-eval''; report-uri
        /_csp'
      X-Bapp-Server:
      - pweb-f594768b7-fjg9h
      Via:
      - 1.1 varnish, 1.1 varnish, 1.1 varnish
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      X-Varnish-Cache:
      - '1'
      X-Vserver:
      - webproxy-rollout-prod-varnish-6
      X-Backend-Proxy:
      - webproxy7
      Age:
      - '0'
      X-Served-By:
      - cache-iad-kcgs7200082-IAD, cache-mrs10569-MRS
      X-Cache:
      - MISS, MISS
      X-Cache-Hits:
      - 0, 0
      X-Timer:
      - S1676492941.905190,VS0,VE147
      Vary:
      - User-Agent,Accept-Encoding
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=KDNgnH4odD8F58L9HwQcyTWgvVRXEaMeIzsACsPqu.4-1676492941-0-AeK1ydNEcfAxSZerxTUsOeR9u7c+Zka2Wc5Gy3xnIlVlW8hNz7BvhJvwgr/ciFuqQn+M9fak9+MS7vwSHwfaVzA=;
        path=/; expires=Wed, 15-Feb-23 20:59:01 GMT; domain=.vimeo.com; HttpOnly;
        Secure; SameSite=None
      Server:
      - cloudflare
      Cf-Ray:
      - 79a0cb105b1228ee-BCN
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Wed, 15 Feb 2023 20:29:01 GMT
recorded_with: VCR 3.0.3
