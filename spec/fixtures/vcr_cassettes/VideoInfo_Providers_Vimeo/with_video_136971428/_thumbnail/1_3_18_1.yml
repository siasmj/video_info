---
http_interactions:
- request:
    method: head
    uri: https://vimeo.com/136971428
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - VideoInfo/3.1.0
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 09 Feb 2023 21:07:23 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Connection:
      - keep-alive
      Expires:
      - Thu, 09 Feb 2023 21:17:16 GMT
      X-Vimeo-Device:
      - d
      X-Ua-Compatible:
      - IE=edge
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - sameorigin
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Security-Policy-Report-Only:
      - 'default-src https: data: blob: wss: ''unsafe-inline'' ''unsafe-eval''; report-uri
        /_csp'
      X-Bapp-Server:
      - pweb-59968c4959-f24vj
      Via:
      - 1.1 varnish, 1.1 varnish, 1.1 varnish
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      X-Varnish-Cache:
      - '1'
      X-Vserver:
      - webproxy-rollout-prod-varnish-3
      X-Backend-Proxy:
      - webproxy4
      Age:
      - '0'
      X-Served-By:
      - cache-iad-kjyo7100044-IAD, cache-mrs10578-MRS
      X-Cache:
      - MISS, MISS
      X-Cache-Hits:
      - 0, 0
      X-Timer:
      - S1675976843.475239,VS0,VE148
      Vary:
      - User-Agent,Accept-Encoding
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=4_8Sc.O4BE9g_hkVIK0s2PxRkQOEkOv6SpKTsWDJDsE-1675976843-0-ASykluS+WbdVXvQ6aBWB/JwCMSoResdfiPT+Js+OK5QKcHNOSyLHMkFDP3DjASmr6DDT/kXpdZopB3FJgDgdwhI=;
        path=/; expires=Thu, 09-Feb-23 21:37:23 GMT; domain=.vimeo.com; HttpOnly;
        Secure; SameSite=None
      Server:
      - cloudflare
      Cf-Ray:
      - 796f93079abd11bb-BCN
    body:
      encoding: UTF-8
      string: ''
    http_version:
  recorded_at: Thu, 09 Feb 2023 21:07:23 GMT
- request:
    method: get
    uri: https://vimeo.com/136971428
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 09 Feb 2023 21:07:23 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Expires:
      - Thu, 09 Feb 2023 21:17:16 GMT
      X-Vimeo-Device:
      - d
      X-Ua-Compatible:
      - IE=edge
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - sameorigin
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Security-Policy-Report-Only:
      - 'default-src https: data: blob: wss: ''unsafe-inline'' ''unsafe-eval''; report-uri
        /_csp'
      X-Bapp-Server:
      - pweb-59968c4959-cs7kl
      Via:
      - 1.1 varnish, 1.1 varnish, 1.1 varnish
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      X-Varnish-Cache:
      - '1'
      X-Vserver:
      - webproxy-rollout-prod-varnish-3
      X-Backend-Proxy:
      - webproxy4
      Age:
      - '0'
      X-Served-By:
      - cache-iad-kjyo7100044-IAD, cache-mrs10578-MRS
      X-Cache:
      - MISS, MISS
      X-Cache-Hits:
      - 0, 0
      X-Timer:
      - S1675976844.707694,VS0,VE138
      Vary:
      - User-Agent,Accept-Encoding
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=a1ivDWyFGY0NNHHIUDZUhdDkUCsZ_ggWlD6dq09B1cY-1675976843-0-AVtLanBvqH46wt2XU9xA1TqvhA4j7WCikDQk2JyMh1G3aULjEYbYtiasHxk3r9rALduiI/k/jaVzSjsx2jThUqA=;
        path=/; expires=Thu, 09-Feb-23 21:37:23 GMT; domain=.vimeo.com; HttpOnly;
        Secure; SameSite=None
      Server:
      - cloudflare
      Cf-Ray:
      - 796f93091dec11bb-BCN
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Thu, 09 Feb 2023 21:07:23 GMT
- request:
    method: head
    uri: https://vimeo.com/136971428
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - VideoInfo/3.1.0
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 09 Feb 2023 21:07:24 GMT
      Content-Type:
      - text/html; charset=UTF-8
      Connection:
      - keep-alive
      Expires:
      - Thu, 09 Feb 2023 21:17:16 GMT
      X-Vimeo-Device:
      - d
      X-Ua-Compatible:
      - IE=edge
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - sameorigin
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Security-Policy-Report-Only:
      - 'default-src https: data: blob: wss: ''unsafe-inline'' ''unsafe-eval''; report-uri
        /_csp'
      X-Bapp-Server:
      - pweb-59968c4959-f24vj
      Via:
      - 1.1 varnish, 1.1 varnish, 1.1 varnish
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      X-Varnish-Cache:
      - '1'
      X-Vserver:
      - webproxy-rollout-prod-varnish-3
      X-Backend-Proxy:
      - webproxy4
      Age:
      - '0'
      X-Served-By:
      - cache-iad-kjyo7100044-IAD, cache-mrs10561-MRS
      X-Cache:
      - MISS, MISS
      X-Cache-Hits:
      - 0, 0
      X-Timer:
      - S1675976844.982110,VS0,VE128
      Vary:
      - User-Agent,Accept-Encoding
      Cf-Cache-Status:
      - DYNAMIC
      Set-Cookie:
      - __cf_bm=rQiyae17zXKFvofCtM6Z4trsiEoILW.jlLmVrUUrBE0-1675976844-0-AeWzj1wUWvRcE+HPrNCzW8mXRL+yWx1KZL2jwKwNtrwYc/G5kWVO8yHfZXquHH1CxRVdCoIbRs7vpx6u4x/cIxc=;
        path=/; expires=Thu, 09-Feb-23 21:37:24 GMT; domain=.vimeo.com; HttpOnly;
        Secure; SameSite=None
      Server:
      - cloudflare
      Cf-Ray:
      - 796f930ac96d28de-BCN
    body:
      encoding: UTF-8
      string: ''
    http_version:
  recorded_at: Thu, 09 Feb 2023 21:07:24 GMT
recorded_with: VCR 3.0.3
